#
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 17 * * *
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  sync_fork:
    name: Sync Fork with Upstream
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Fork
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git for Actions
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Backup local .config
        run: cp .config .config.bak || true

      - name: Add upstream remote & fetch
        run: |
          git remote add upstream https://github.com/coolsnowwolf/lede.git
          git fetch upstream master

      - name: Attempt merge from upstream/master
        id: try_merge
        run: |
          set -e
          git merge upstream/master --no-ff -m "chore: sync from upstream/master" || echo "::set-output name=conflict::true"

      - name: Handle conflicts by opening a PR
        if: steps.try_merge.outputs.conflict == 'true'
        run: |
          echo "⚠️ Merge conflict detected, aborting merge and opening PR"
          git merge --abort
        # Push the conflict state and open a PR for manual resolution
      - name: Push conflict branch & open PR
        if: steps.try_merge.outputs.conflict == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: sync-with-upstream
          title:    "🔀 Conflict syncing upstream/master"
          body:     |
            The automatic sync with upstream/master hit merge conflicts.
            Please resolve them on `sync-with-upstream` and merge back into `master`.
          base:     master

      - name: Restore .config & commit if clean merge
        if: steps.try_merge.outputs.conflict != 'true'
        run: |
          mv .config.bak .config
          git add .config
          git commit --amend --no-edit
          git push origin master

  build_openwrt:
    name: Build OpenWrt Firmware
    needs: sync_fork
    runs-on: ubuntu-22.04
    steps:
      - name: Delete previous workflow runs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PREVIOUS_RUNS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/actions/runs" | jq -r '.workflow_runs[] | select(.status == "completed") | .id')
          for run_id in $PREVIOUS_RUNS; do
            echo "Deleting workflow run ID: $run_id"
            curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id"
          done

      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools python3-distutils qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev g++ file 
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean

      - name: Checkout OpenWrt
        uses: actions/checkout@v4

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Optional configuration file
        run: |
          echo "CONFIG_GRUB_IMAGES=y" >> .config
          echo "# CONFIG_GRUB_EFI_IMAGES is not set" >> .config
          echo "CONFIG_TARGET_ROOTFS_EXT4FS=y" >> .config
          echo "CONFIG_DEVEL=y" >> .config
          echo "CONFIG_AUTOREMOVE=y" >> .config

      - name: Generate configuration file
        run: make defconfig

      # Cache the downloaded packages (the dl folder)
      - name: Cache Download packages for next run!
        uses: actions/cache@v3
        with:
          path: dl
          # Using feeds.conf.default to compute the cache key.
          # Adjust the hashFiles arguments if you need to invalidate the cache when other files change.
          key: ${{ runner.os }}-openwrt-dl-${{ hashFiles('feeds.conf.default') }}
          restore-keys: |
            ${{ runner.os }}-openwrt-dl-

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j2 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
